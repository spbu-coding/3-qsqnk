Пусть переменная err хранит отклонение величины 2.0001 от свободного члена второго уравнения.
x1 + x2 = 2
x1 + 1.0001x2 = 2.0001 + err,
что равносильно
x1 = 1 - 10000 * err
x2 = (0.0001 + err) / (0.0001)

Нам нужно найти min{n | err = 0.0001/2^n и distance((1, 1), (x1, x2)) < 10^(-6)}
Давайте решим соответствующее неравенство:
distance = sqrt((x1 - 1)^2 + (x2 - 1)^2) = 10000 * err * sqrt2 = 10000 * 0.0001 * 2^(-n) * sqrt2 = sqrt2 * 2^(-n)
2^(-n) * sqrt2 < EPSILON = 1e-6, откуда получаем n >= 21, n(min) = 21
Так, количество итераций в цикле должно быть равно 21.

Давайте проверим это программно, используя тип данных double и float:

Я пользуюсь обычным сравнением чисел с плавающей точкой ">=", потому что, при сравнении
через epsilon мы будем получать разные результаты в зависимости от epsilon.

1) double: 
   итоговая погрешность 0.000000000047683715820312502,
   количество итераций 21.
   все верно, давайте посмотрим на погрешность переменной err от точного значения 0.0001 / 2^21:
   err - 0.0001 / 2^21 = 2 * 10^(-27)
2) float:
   итоговая погрешность 0.000000000047683714615720518000,
   количество итераций 21.
   все верно, давайте посмотрим на погрешность переменной err от точного значения 0.0001 / 2^21:
   err - 0.0001 / 2^21 = -1.2 * 10^(-18)
Таким образом, значение err в double значительнее ближе к точному значению нежели во float.

Также нужно сделать отступление, что результат работы программы сильно зависит от того, как вычислять решения
системы уравнений. Например, если при вычислении во float мы будем пользоваться формулой:
x2 = (2.0001f - 2.000f + err) / (0.0001f)
x1 = 2.000f - x2
То мы получим бесконечный цикл.